definitions:
  models.ItemRequest:
    properties:
      name:
        example: Sample Item
        type: string
      price:
        example: 19.99
        type: number
    type: object
  models.ItemResponse:
    properties:
      id:
        example: 1
        type: integer
      name:
        example: Sample Item
        type: string
      price:
        example: 19.99
        type: number
    type: object
  models.UserRequest:
    properties:
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: Your API description.
  title: Your API Title
  version: "1.0"
paths:
  /items:
    get:
      description: Retrieve all items from the database
      produces:
      - application/json
      responses:
        "200":
          description: List of items
          schema:
            items:
              $ref: '#/definitions/models.ItemResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get all items
      tags:
      - items
    post:
      consumes:
      - application/json
      description: Create a new item and save it to the database, then publish to
        NATS
      parameters:
      - description: Item to create
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/models.ItemRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created item
          schema:
            $ref: '#/definitions/models.ItemResponse'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new item
      tags:
      - items
  /items/{id}:
    delete:
      description: Remove an item from the database by its ID
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Item deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid item ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Item not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete an item
      tags:
      - items
    get:
      description: Retrieve a single item from the database by its ID
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Retrieved item
          schema:
            $ref: '#/definitions/models.ItemResponse'
        "400":
          description: Invalid item ID
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Item not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get an item by ID
      tags:
      - items
    put:
      consumes:
      - application/json
      description: Update an item in the database and publish the updated item to
        NATS
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated item details
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/models.ItemRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Item updated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input or item ID
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update an existing item
      tags:
      - items
  /items/search:
    get:
      consumes:
      - application/json
      description: Searches, filters, sorts, and paginates items based on query parameters
      parameters:
      - description: Search query
        in: query
        name: search
        type: string
      - description: Minimum price
        in: query
        name: min_price
        type: number
      - description: Maximum price
        in: query
        name: max_price
        type: number
      - description: Sort by field (e.g., price, name)
        in: query
        name: sort_by
        type: string
      - description: Sort order (ASC or DESC)
        in: query
        name: sort_order
        type: string
      - description: Page number (default is 1)
        in: query
        name: page
        type: integer
      - description: Items per page (default is 10)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of items with pagination metadata
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Search, filter, and sort items with pagination
      tags:
      - Items
  /login:
    post:
      consumes:
      - application/json
      description: Logs in the user and returns a JWT token
      parameters:
      - description: User login credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: JWT Token
          schema:
            type: string
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user and get JWT token
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Registers a new user with a role and returns a JWT token
      parameters:
      - description: User to register
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: JWT Token
          schema:
            type: string
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
